version: '3'

services:
  qdebrid:
    container_name: qdebrid
    image: ghcr.io/sushydev/qdebrid:main
    restart: unless-stopped
    volumes:
      - ./qdebrid.yml:/app/config.yml
      - scripts:/mnt/scripts

  zurg:
    container_name: zurg
    image: ghcr.io/debridmediamanager/zurg-testing:latest
    restart: unless-stopped
    ports:
      - "9999:${ZURG_PORT}"
    volumes:
      - ./zurg.yml:/app/config.yml
      - zurgdata:/app/data
    healthcheck:
      test: curl --silent --show-error --fail localhost:9999/dav/version.txt
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s

  plex:
    container_name: plex
    image: ghcr.io/hotio/plex:latest
    restart: unless-stopped
    ports:
      - "32400:${PLEX_PORT}"
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - ~/.config/plex/database:/config
      - ~/.config/plex/transcode:/transcode
      - ~/.config/radarr/media:/mnt/radarr
      - ~/.config/sonarr/media:/mnt/sonarr
      - zurg:/mnt/zurg
    healthcheck:
      test: curl --silent --show-error --fail http://localhost:32400/identity
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:latest
    restart: unless-stopped
    ports:
      - "9696:${PROWLARR_PORT}"
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - ~/.config/prowlarr/config:/config

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    ports:
      - "8989:${SONARR_PORT}"
    depends_on:
      - plex
      - prowlarr
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - ~/.config/sonarr/config:/config
      - ~/.config/sonarr/media:/mnt/sonarr
      - zurg:/mnt/zurg
      - scripts:/mnt/scripts

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    restart: unless-stopped
    ports:
      - "7878:${RADARR_PORT}"
    depends_on:
      - plex
      - prowlarr
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - ~/.config/radarr/config:/config
      - ~/.config/radarr/media:/mnt/radarr
      - zurg:/mnt/zurg
      - scripts:/mnt/scripts

  overseerr:
    container_name: overseerr
    image: ghcr.io/hotio/overseerr:latest
    restart: unless-stopped
    ports:
      - "5055:${OVERSEERR_PORT}"
    depends_on:
      - plex
      - sonarr
      - radarr
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - ~/.config/overseerr/config:/app/config

volumes:
  zurgdata:
  scripts:
  zurg:
    driver: rclone
    driver_opts:
      type: "webdav"
      webdav_url: "http://localhost:${ZURG_PORT}/dav"
      webdav_vendor: "other"
      webdav_pacer_min_sleep: "0"
      allow_non_empty: "true"
      allow_other: "true"
      uid: "1000"
      gid: "1000"
      vfs_cache_mode: "writes"
      vfs_read_chunk_size: "2G"
      dir_cache_time: "15s"
      poll_interval: "10s"
